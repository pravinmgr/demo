@(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.DetailProductViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName);
        columns.Bound(p => p.percentage)
            .ClientTemplate("#= renderProgressBar(percentage) #")
            .HtmlAttributes(new { style = "text-align:center;" })
            .Title("Percentage");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("ActionName", "ControllerName"))
    )
    // Add your other grid configurations here
)

<script>
    function renderProgressBar(percentage) {
        var progressColor = percentage === 100 ? 'progress-bar-danger' : 'progress-bar-success';

        return '<div class="progress" style="height: 20px;">' +
                   '<div class="progress-bar ' + progressColor + '" role="progressbar" aria-valuenow="' + percentage + '" aria-valuemin="0" aria-valuemax="100" style="width: ' + percentage + '%;">' +
                       percentage + '%' +
                   '</div>' +
               '</div>';
    }
</script>


sedond

@(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.DetailProductViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName);
        columns.Bound(p => p.percentage)
            .ClientTemplate(
                @<text>
                    <div class="progress" style="height: 20px; text-align: center;">
                        <div class="progress-bar @(item.percentage == 100 ? "progress-bar-danger" : "progress-bar-success")"
                             role="progressbar"
                             aria-valuenow="@item.percentage"
                             aria-valuemin="0"
                             aria-valuemax="100"
                             style="width: @(item.percentage)%;"
                        >
                            @item.percentage%
                        </div>
                    </div>
                </text>
            )
            .Title("Percentage");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("ActionName", "ControllerName"))
    )
    // Add your other grid configurations here
)

.progress {
    display: flex;
    height: 20px;
    align-items: center;
    text-align: center;
    margin-bottom: 0;
}

.progress-bar {
    font-size: 14px;
}

.progress-bar.bg-danger {
    background-color: #dc3545; /* Red color for 100% progress */
}

.progress-bar.bg-success {
    background-color: #28a745; /* Green color for other progress values */
}


old way 

@(Html.Kendo().Grid<Kendo.Mvc.Examples.Models.DetailProductViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName);
        columns.Bound(p => p.percentage)
            .ClientTemplate(
                @<text>
                    @(Html.Kendo().Sparkline()
                        .Name("sparkline-#=ProductID#")
                        .Type(SparklineType.Bar)
                        .Data(@item.YourSparklineDataProperty) // Replace with the actual property containing sparkline data
                        .Tooltip(tooltip => tooltip.Visible(true))
                    )
                </text>
            )
            .Title("Percentage");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("ActionName", "ControllerName"))
    )
    // Add your other grid configurations here
)
