import React, { useState, useEffect } from 'react';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

const GridComponent: React.FC = () => {
  const [rowData, setRowData] = useState<any[]>([]);

  const columnDefs = [
    { headerName: 'ID', field: 'id' },
    { headerName: 'Name', field: 'name' },
    { headerName: 'Value', field: 'value' },
  ];

  useEffect(() => {
    // Fetch data from API
    fetch('https://api.example.com/data')
      .then(response => response.json())
      .then(data => setRowData(data))
      .catch(error => console.error('Error fetching data:', error));
  }, []);

  return (
    <div className="ag-theme-alpine" style={{ height: 400, width: 600 }}>
      <AgGridReact
        rowData={rowData}
        columnDefs={columnDefs}
        defaultColDef={{ sortable: true, filter: true }}
      />
    </div>
  );
};

export default GridComponent;



import React, { useState, useEffect } from 'react';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

const GridComponent: React.FC = () => {
  const [rowData, setRowData] = useState<any[]>([]);

  const columnDefs = [
    { headerName: 'ID', field: 'id' },
    { headerName: 'Name', field: 'name' },
    { headerName: 'Value', field: 'value' },
  ];

  useEffect(() => {
    // Simulate API call with dummy data
    setTimeout(() => {
      const data = [
        { id: 1, name: 'John Doe', value: 100 },
        { id: 2, name: 'Jane Smith', value: 200 },
        { id: 3, name: 'Alice Johnson', value: 300 },
      ];
      setRowData(data);
    }, 1000); // Delay of 1 second
  }, []);

  return (
    <div className="ag-theme-alpine" style={{ height: 400, width: 600 }}>
      <AgGridReact
        rowData={rowData}
        columnDefs={columnDefs}
        defaultColDef={{ sortable: true, filter: true }}
      />
    </div>
  );
};

export default GridComponent;
 headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      }




// GridComponent.tsx
import React, { useState, useEffect } from 'react';
import { AgGridReact } from 'ag-grid-react';
import { ColDef } from 'ag-grid-community';
import axios from 'axios';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';

interface RowData {
  store: string;
  datapoint: number;
  test: string;
  inactive: boolean;
}

const GridComponent: React.FC = () => {
  const [rowData, setRowData] = useState<RowData[]>([]);
  const [selectedOption, setSelectedOption] = useState<string>(''); // State for dropdown selection
  const [columnDefs] = useState<ColDef[]>([
    { headerName: 'Store', field: 'store' },
    { headerName: 'Datapoint', field: 'datapoint', sortable: true, filter: true },
    { headerName: 'Test', field: 'test' },
    {
      headerName: 'InActive',
      field: 'inactive',
      cellRenderer: (params: any) => (params.value ? 'Yes' : 'No'),
      sortable: true,
    },
  ]);

  const token = 'your-bearer-token-here'; // Replace with your actual Bearer token

  // Fetch data based on the selected dropdown option
  useEffect(() => {
    const fetchData = async () => {
      if (selectedOption) {
        try {
          const response = await axios.get<RowData[]>(
            `https://api.example.com/data?filter=${selectedOption}`,
            {
              headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*', // This is for CORS
              },
              withCredentials: true, // Include credentials if needed
            }
          );
          setRowData(response.data);
        } catch (error) {
          console.error('Error fetching data:', error);
        }
      }
    };

    fetchData();
  }, [selectedOption]);

  // Handle dropdown change
  const handleDropdownChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setSelectedOption(event.target.value);
  };

  return (
    <div>
      {/* Dropdown for selecting data filter */}
      <div style={{ marginBottom: '10px' }}>
        <label htmlFor="dataSelect">Select Data: </label>
        <select id="dataSelect" value={selectedOption} onChange={handleDropdownChange}>
          <option value="">-- Select an Option --</option>
          <option value="option1">Option 1</option>
          <option value="option2">Option 2</option>
          <option value="option3">Option 3</option>
        </select>
      </div>

      {/* AG Grid */}
      <div className="ag-theme-alpine" style={{ height: '400px', width: '100%' }}>
        <AgGridReact
          rowData={rowData}
          columnDefs={columnDefs}
          defaultColDef={{ sortable: true, filter: true, resizable: true }}
        />
      </div>
    </div>
  );
};

export default GridComponent;
